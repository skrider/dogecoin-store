{"version":3,"sources":["constants.ts","components/Navbar/Navbar.tsx","components/PriceTag/PriceTag.tsx","pages/Home/components/ItemCard/ItemCard.tsx","pages/Home/Home.tsx","components/QuantitySelect/QuantitySelect.tsx","pages/Cart/components/CartCard/CartCard.tsx","pages/Cart/components/RecoverCard/RecoverCard.tsx","pages/Cart/Cart.tsx","components/ItemModal/ItemModal.tsx","components/Footer/Footer.tsx","App.tsx","index.tsx"],"names":["StoreItemsInfo","name","price","img","desc","tags","ItemTags","accumulator","forEach","item","tag","includes","push","Navbar","setSearch","w","h","p","flexDir","justifyContent","bg","to","color","fontSize","as","height","borderRadius","placeholder","onChange","event","target","value","toLowerCase","_focus","boxShadow","mr","BiCart","boxSize","BsFillPersonFill","PriceTag","isLocked","props","useState","mode","setMode","formatPrice","toFixed","onClick","cursor","userSelect","alignItems","src","alt","Math","random","ItemCard","handleFilter","gridTemplateColumns","gridTemplateRows","alignSelf","maxH","overflow","border","flexWrap","sort","map","index","m","lineHeight","Home","cartItems","searchExp","setShowItem","filterTags","setFilterTags","onFilter","filter","mx","mt","my","length","gridAutoRows","watcher","mb","action","QuantitySelect","quantity","changeQuantity","spacing","ml","CartCard","flex","RecoverCard","onBanish","Cart","CartItems","removed","setRemoved","reduce","sum","num","ItemModal","isOpen","onClose","size","Footer","App","setCartItems","setSearchExp","showItem","newQuantity","findIndex","i","max","onItemModalClose","minH","path","theme","extendTheme","colors","blue","yellow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e29fa02.chunk.js","sourcesContent":["import {ItemTag, StoreItemInfo} from './types';\r\n\r\n//Raw item info. Images stored in s3 bucket\r\nexport const StoreItemsInfo : StoreItemInfo[] = [\r\n\t{\r\n\t\tname: 'Tea Cup',\r\n\t\tprice: 30,\r\n\t\timg: 'https://dogecoin-store.s3-us-west-1.amazonaws.com/cup.jpg',\r\n\t\tdesc: 'This cup is great for holding tea',\r\n\t\ttags: [\r\n\t\t\t\"small\",\r\n\t\t\t\"import\",\r\n\t\t\t\"microwave safe\",\r\n\t\t\t\"classy\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Medium Cup',\r\n\t\tprice: 10,\r\n\t\timg: 'https://dogecoin-store.s3-us-west-1.amazonaws.com/S-6859.webp',\r\n\t\tdesc: 'This is a small cup with a small description',\r\n\t\ttags: [\r\n\t\t\t\"medium\",\r\n\t\t\t\"domestic\",\r\n\t\t\t\"kid friendly\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Small Cup',\r\n\t\tprice: 20,\r\n\t\timg: 'https://dogecoin-store.s3-us-west-1.amazonaws.com/maxresdefault+(1).jpg',\r\n\t\tdesc: 'Medium cup with a medium description medium description medium description medium description medium description medium description medium description',\r\n\t\ttags: [\r\n\t\t\t\"small\",\r\n\t\t\t\"import\",\r\n\t\t\t\"microwave safe\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Imaginary Cup',\r\n\t\tprice: 20,\r\n\t\timg: 'https://dogecoin-store.s3-us-west-1.amazonaws.com/7GXXb_EFZlnQ8VEfHSVMZ3lDRHPIWl_ozxCB94XSnzw.jpg',\r\n\t\tdesc: 'This cup does not exist',\r\n\t\ttags: [\r\n\t\t\t\"microwave safe\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Happy Cup',\r\n\t\tprice: 20,\r\n\t\timg: 'https://dogecoin-store.s3-us-west-1.amazonaws.com/chip.png',\r\n\t\tdesc: 'Medium cup with a medium description medium description medium description medium description medium description medium description medium description',\r\n\t\ttags: [\r\n\t\t\t\"small\",\r\n\t\t\t\"import\",\r\n\t\t\t\"classy\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Cup Assembly Kit',\r\n\t\tprice: 20,\r\n\t\timg: 'https://dogecoin-store.s3-us-west-1.amazonaws.com/broken.jpg',\r\n\t\tdesc: 'Medium cup with a medium description medium description medium description medium description medium description medium description medium description',\r\n\t\ttags: [\r\n\t\t\t\"medium\",\r\n\t\t\t\"domestic\",\r\n\t\t\t\"microwave safe\",\r\n\t\t\t\"kid friendly\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Big Cup',\r\n\t\tprice: 20,\r\n\t\timg: 'https://dogecoin-store.s3-us-west-1.amazonaws.com/bucket.jpg',\r\n\t\tdesc: 'long description long description long description long description long description long description long description long description long description long description long description long description long description long description long description long description ',\r\n\t\ttags: [\r\n\t\t\t\"large\",\r\n\t\t\t\"domestic\",\r\n\t\t\t\"microwave safe\",\r\n\t\t\t\"durable\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Half Empty Cup',\r\n\t\tprice: 15,\r\n\t\timg: 'https://dogecoin-store.s3-us-west-1.amazonaws.com/whitecappthumb__51873.1432003736.webp',\r\n\t\tdesc: 'This cup is half empty',\r\n\t\ttags: [\r\n\t\t\t\"medium\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Half Full Cup',\r\n\t\tprice: 16,\r\n\t\timg: 'https://dogecoin-store.s3-us-west-1.amazonaws.com/cup.jpg',\r\n\t\tdesc: 'This cup is half full',\r\n\t\ttags: [\r\n\t\t\t\"medium\"\r\n\t\t]\r\n\t}\r\n]\r\n\r\n//reduce the StoreItems array into an array containing all unique tag values\r\nexport const ItemTags : ItemTag[] = (() => {\r\n\tconst accumulator : ItemTag[] = [];\r\n\tStoreItemsInfo.forEach(\r\n\t\titem => {\r\n\t\t\titem.tags.forEach(\r\n\t\t\t\ttag => {if (!accumulator.includes(tag)){\r\n\t\t\t\t\taccumulator.push(tag)\r\n\t\t\t\t}}\r\n\t\t\t)\r\n\t\t}\r\n\t);\r\n\treturn accumulator;\r\n})()\r\n\r\n//DogeCoin Logo\r\nexport const DogeLogo : string = \"https://dogecoin-store.s3-us-west-1.amazonaws.com/dogecoin.svg\";\r\n\r\nexport const DogeExchangeRate : number = 0.35;\r\n","import React from 'react';\r\nimport {Flex, Text, Input, Icon} from '@chakra-ui/react'\r\nimport {BiCart} from 'react-icons/bi'\r\nimport {Link} from 'react-router-dom'\r\nimport {BsFillPersonFill} from 'react-icons/bs'\r\n\r\nexport type NavbarProps = {\r\n\tsetSearch: (value : string) => void,\r\n};\r\n\r\nconst Navbar: React.FC<NavbarProps> = ({setSearch}: NavbarProps) => {\r\n return (\r\n   <Flex\r\n\t   w={'100%'}\r\n\t   h={'4rem'}\r\n\t   p={'0.75rem'}\r\n\t   flexDir={'row'}\r\n\t   justifyContent={'space-between'}\r\n\t   bg={'blue'}\r\n   >\r\n\t   <Link to={'/'}>\r\n\t\t   <Text color={'yellow'} fontSize={'1.5rem'}>\r\n\t\t\t   <b>DogeCoin</b> Store\r\n\t\t   </Text>\r\n\t   </Link>\r\n\t   <Flex h={'100%'}>\r\n\t\t   <Input //search bar for both Store and Cart views\r\n\t\t\t   as=\"input\"\r\n\t\t\t   height=\"auto\"\r\n\t\t\t   borderRadius=\"2xl\"\r\n\t\t\t   name=\"Search\"\r\n\t\t\t   color={'yellow'}\r\n\t\t\t   placeholder=\"Search...\"\r\n\t\t\t   onChange={(event) => setSearch(event.target.value.toLowerCase())}\r\n\t\t\t   _focus={{\r\n\t\t\t\t   boxShadow: 'md',\r\n\t\t\t   }}\r\n\t\t\t   mr={'0.5rem'}\r\n\t\t   />\r\n\t\t   <Link to={'/cart'}>\r\n\t\t\t   <Icon //react router link to cart\r\n\t\t\t\t   as={BiCart}\r\n\t\t\t\t   color={'yellow'}\r\n\t\t\t\t   boxSize={'40px'}\r\n\t\t\t\t   mr={'0.5rem'}\r\n\t\t\t   />\r\n\t\t   </Link>\r\n\t\t   <Icon\r\n\t\t\t   as={BsFillPersonFill}\r\n\t\t\t   boxSize={'40px'}\r\n\t\t\t   color={'yellow'}\r\n\t\t\t   mr={'0.5rem'}\r\n\t\t   />\r\n\t   </Flex>\r\n   </Flex>\r\n );\r\n};\r\n\r\nexport default Navbar;","import React, {useState} from 'react';\r\nimport {Text, TextProps, Image, Flex, Box} from '@chakra-ui/react'\r\nimport {DogeLogo, DogeExchangeRate} from \"../../constants\";\r\n\r\nexport type PriceTagProps = {\r\n\tisLocked: boolean,\r\n\tprice: number\r\n} & TextProps;\r\n\r\n//This function renders a pricetag in either Doge or Dollars\r\nconst PriceTag: React.FC<PriceTagProps> = ({isLocked, price, ...props}: PriceTagProps) => {\r\n\t//Keep track of which currency to show\r\n\tconst [mode, setMode] = useState(false);\r\n\r\n  const formatPrice = (price : number) : string => {\r\n  \treturn `${price.toFixed(2)}`\r\n  }\r\n\r\n\treturn (\r\n    <Box onClick={() => setMode(!mode)} cursor={'pointer'} userSelect={'none'}>\r\n\t    {mode && !isLocked ? //only toggle if isLocked is false\r\n\t\t    <Flex alignItems={'center'}>\r\n\t\t\t    <Image\r\n\t\t\t\t    src={DogeLogo}\r\n\t\t\t\t    alt={\"D$ \"}\r\n            boxSize={'20px'}\r\n\t\t\t    />\r\n\t\t\t    <Text {...props}>\r\n\t\t\t\t    {formatPrice(price/(DogeExchangeRate + Math.random() * 0.5 - 0.25))}\r\n\t\t\t    </Text>\r\n\t\t    </Flex>\r\n\t\t    :\r\n\t\t    <Text {...props}>\r\n\t\t\t    ${formatPrice(price)}\r\n\t\t    </Text>\r\n\t    }\r\n    </Box>\r\n );\r\n};\r\n\r\nexport default PriceTag;","import React from 'react';\r\nimport { CartItem } from \"src/types\";\r\nimport PriceTag from \"src/components/PriceTag\";\r\nimport {Text, Flex, Image, Divider, Button, BoxProps, Grid} from \"@chakra-ui/react\"\r\n\r\nexport type ItemCardProps = {\r\n\titem: CartItem\r\n\tonClick: (target: any) => void;\r\n\thandleFilter: (target: any) => void;\r\n} & BoxProps;\r\n\r\nconst ItemCard: React.FC<ItemCardProps> = (\r\n\t{item: {name, price, img, tags},\r\n\t\tonClick,\r\n\t\thandleFilter,\r\n\t\t...props}) => {\r\n return (\r\n  <Grid\r\n    p={'2rem'}\r\n    borderRadius={'md'}\r\n    boxShadow={'md'}\r\n    bg={'white'}\r\n    gridTemplateColumns={'1fr'}\r\n    gridTemplateRows={'2fr 1fr'}\r\n    {...props}\r\n  >\r\n\t  <Flex\r\n\t\t  alignSelf={'center'}\r\n\t\t  alignItems={'center'}\r\n\t  >\r\n\t\t  <Image\r\n\t\t\t  src={img}\r\n\t\t\t  w={'auto'}\r\n\t\t\t  maxH={'100%'}\r\n\t\t\t  alt={name}\r\n\t\t\t  onClick={() => onClick(name)}\r\n\t\t\t  cursor={'pointer'}\r\n\t\t  />\r\n\t  </Flex>\r\n\t  <Flex //stack of information about item\r\n\t\t  flexDir={'column'}\r\n\t    alignItems={'left'}\r\n\t    overflow={'hidden'}\r\n\t  >\r\n\t\t  <Text\r\n\t\t    fontSize={'xl'}\r\n\t\t    color={'blue'}\r\n\t\t    onClick={() => onClick(name)}\r\n\t\t    cursor={'pointer'}\r\n\t\t  >\r\n\t\t\t  {name}\r\n\t\t  </Text>\r\n\t\t  <Divider\r\n\t\t\t  color={'blue'}\r\n\t\t\t  border={'3'}\r\n\t\t  />\r\n\t\t\t<PriceTag\r\n\t\t\t\tisLocked={false}\r\n\t\t\t\tprice={price}\r\n\t\t\t\tfontSize={'xl'}\r\n\t\t\t\tcolor={'yellow'}\r\n\t\t\t/>\r\n\t\t\t<Flex //flex containing tags\r\n\t\t\t\tflexDir={'row'}\r\n\t\t\t\tflexWrap={'wrap'}\r\n\t\t\t>\r\n\t\t\t\t{tags.sort().map((tag, index) => {\r\n\t\t\t\t\treturn <Button\r\n\t\t\t\t\t\tkey={`${name}${tag}${index}`}\r\n\t\t\t\t\t\tbg={'yellow'}\r\n\t\t\t\t\t\tcolor={'blue'}\r\n\t\t\t\t\t\tfontSize={'sm'}\r\n\t\t\t\t\t\tp={'0.5rem'}\r\n\t\t\t\t\t\tm={'0.2rem'}\r\n\t\t\t\t\t\th={'1.5rem'}\r\n\t\t\t\t\t\tlineHeight={'75%'}\r\n\t\t\t\t\t\toverflow={'hidden'}\r\n\t\t\t\t\t\tonClick={() => handleFilter(tag)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{tag}\r\n\t\t\t\t\t</Button>})}\r\n\t\t\t</Flex>\r\n\t  </Flex>\r\n  </Grid>\r\n );\r\n};\r\n\r\nexport default ItemCard;","import React, {useState} from 'react';\r\nimport {CartItem, ItemTag} from \"../../types\";\r\nimport {ItemTags} from \"../../constants\";\r\nimport {Text, Flex, Grid, Divider, Link} from '@chakra-ui/react'\r\nimport ItemCard from \"./components/ItemCard\";\r\n\r\nexport type HomeProps = {\r\n\tcartItems : CartItem[],\r\n\tsearchExp: string,\r\n\tsetShowItem: (target: any) => void,\r\n};\r\n\r\nconst Home: React.FC<HomeProps> = (\r\n\t{cartItems,\r\n\t\tsearchExp,\r\n\t\tsetShowItem\r\n\t}: HomeProps) => {\r\n\t//Contains currently selected tags\r\n\tconst [filterTags, setFilterTags] = useState<ItemTag[]>([])\r\n\r\n\t//Either adds or removes a tag from the list, depending on whether it was initially present\r\n\tconst onFilter = (target : ItemTag) => {\r\n\t\tif (filterTags.includes(target)) {\r\n\t\t\tsetFilterTags(filterTags.filter(tag => !(target === tag)))\r\n\t\t} else {\r\n\t\t\tsetFilterTags([...filterTags, target])\r\n\t\t}\r\n\t}\r\n\r\n\t//Callback function used to filter through the CartItem list\r\n\tconst handleFilter = (item : CartItem) : boolean => {\r\n\t\t//first check tags\r\n\t\tlet watcher = true;\r\n\t\tfilterTags.forEach(tag => {\r\n\t\t\tif (!item.tags.includes(tag)) {\r\n\t\t\t\twatcher = false;\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (!watcher && filterTags.length > 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t//next check search value\r\n\t\tif (searchExp === '') {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn item.name.toLowerCase().includes(searchExp);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t  <Flex\r\n\t    flexDir={'row'}\r\n\t    w={'100%'}\r\n\t  >\r\n\t\t  <Flex // List of Filters\r\n\t\t\t  flexDir={'column'}\r\n\t\t\t  mx={'1rem'}\r\n\t\t  >\r\n\t\t\t  <Text\r\n\t\t\t\t  fontSize={'4xl'}\r\n\t\t\t\t  color={'yellow'}\r\n\t\t\t  >\r\n\t\t\t\t  <b>Filter</b>\r\n\t\t\t  </Text>\r\n\t\t\t  <Divider\r\n\t\t\t\t  color={'blue'}\r\n\t\t\t\t  border={'3'}\r\n\t\t\t\t  w={'12rem'}\r\n\t\t\t  />\r\n\t\t\t  {ItemTags.map(tag =>\r\n\t\t\t\t  <Text\r\n\t\t\t\t\t  key={`${tag}_master`}\r\n\t\t\t\t\t  mt={'0.2rem'}\r\n\t\t\t\t\t  color={filterTags.includes(tag) ? 'yellow' : 'blue'} //render differently based on whether tag is selected\r\n\t\t\t\t\t  onClick={() => onFilter(tag)}\r\n\t\t\t\t\t  cursor={'pointer'}\r\n\t\t\t\t\t  userSelect={'none'}\r\n\t\t\t\t  >\r\n\t\t\t\t\t  {filterTags.includes(tag) ? <b>{tag}</b> : tag}\r\n\t\t\t\t  </Text>\r\n\t\t\t  )}\r\n\t\t\t  <Divider\r\n\t\t\t\t  color={'blue'}\r\n\t\t\t\t  border={'3'}\r\n\t\t\t\t  w={'12rem'}\r\n\t\t\t\t  my={'0.5rem'}\r\n\t\t\t  />\r\n\t\t\t  {filterTags.length > 0 ?\r\n\t\t\t\t  <Link\r\n\t\t\t\t\t\tcolor={'yellow'}\r\n\t\t\t\t\t\tfontSize={'sm'}\r\n\t\t\t\t\t\tonClick={() => setFilterTags([])}\r\n\t\t\t\t  >\r\n\t\t\t\t\t\tclear\r\n\t\t\t\t  </Link>\r\n\t\t\t  :\r\n\t\t\t\t  ''\r\n\t\t    }\r\n\t\t  </Flex>\r\n\t\t  <Flex //flex containing item view\r\n\t\t\t  flexDir={'column'}\r\n\t\t  >\r\n\t\t\t  <Text\r\n\t\t\t\t  fontSize={'4xl'}\r\n\t\t\t\t  color={'yellow'}\r\n\t\t\t  >\r\n\t\t\t\t  <b>Items</b>\r\n\t\t\t  </Text>\r\n\t\t\t  <Divider\r\n\t\t\t\t  color={'blue'}\r\n\t\t\t\t  border={'3'}\r\n\t\t\t  />\r\n\t\t\t  <Grid //grid containing item cards\r\n\t\t\t\t  gridTemplateColumns={'1fr 1fr 1fr'}\r\n\t\t\t\t  gridAutoRows={'1fr'}\r\n\t\t\t  >\r\n\t\t\t\t  {cartItems.filter(item => handleFilter(item)).map((item, index) => {\r\n\t\t\t\t\t  return <ItemCard\r\n\t\t\t\t\t\t  key={`${item.name}card${index}`}\r\n\t\t\t\t\t\t  mb={'1rem'}\r\n\t\t\t\t\t\t  mt={'0.5rem'}\r\n\t\t\t\t\t\t\tmr={'1rem'}\r\n\t\t\t\t\t\t  item={item}\r\n\t\t\t\t\t\t  onClick={(target: any) => setShowItem(target)}\r\n\t\t\t\t\t\t  handleFilter={(action: any) => onFilter(action)}\r\n\t\t\t\t\t  />\r\n\t\t\t\t  })}\r\n\t\t\t  </Grid>\r\n\t\t  </Flex>\r\n\t  </Flex>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport {Text, Flex, Tag, BoxProps} from '@chakra-ui/react';\r\nimport {BsChevronUp, BsChevronDown} from 'react-icons/bs';\r\n\r\nexport type QuantitySelectProps = {\r\n quantity: number,\r\n changeQuantity: (value: number) => void\r\n} & BoxProps;\r\n\r\n//This function displays current quantity, and allows user to increment it up and down\r\nconst QuantitySelect: React.FC<QuantitySelectProps> = ({quantity, changeQuantity, ...props}: QuantitySelectProps) => {\r\n return (\r\n  <Flex\r\n    flexDir={'row'}\r\n    spacing={'1rem'}\r\n    alignItems={'center'}\r\n    {...props}\r\n  >\r\n    <Tag //incremenet quantity up\r\n      onClick={() => changeQuantity(quantity + 1)}\r\n      mr={'1rem'}\r\n      bg={'yellow'}\r\n    >\r\n      <BsChevronUp />\r\n    </Tag>\r\n    <Text\r\n      fontSize={'2xl'}\r\n      lineHeight={'75%'}\r\n      userSelect={'none'}\r\n      mb={'4px'}\r\n      color={'blue'}\r\n    >\r\n      {`${quantity}`}\r\n    </Text>\r\n    <Tag //increment quantity down\r\n      onClick={() => changeQuantity(quantity - 1)}\r\n      ml={'1rem'}\r\n      bg={'yellow'}\r\n    >\r\n      <BsChevronDown />\r\n    </Tag>\r\n  </Flex>\r\n );\r\n};\r\n\r\nexport default QuantitySelect;","import React from 'react';\r\nimport {Flex, Box, Text, Image, Divider, BoxProps, Link} from '@chakra-ui/react';\r\nimport {CartItem} from 'src/types'\r\nimport PriceTag from \"src/components/PriceTag\";\r\nimport QuantitySelect from \"src/components/QuantitySelect\";\r\n\r\nexport type CartCardProps = {\r\n\titem: CartItem,\r\n\tonClick: () => void,\r\n\tchangeQuantity: (value: number) => void,\r\n} & BoxProps;\r\n\r\nconst CartCard: React.FC<CartCardProps> = (\r\n\t{item: {name, price, img, quantity},\r\n\t\tonClick,\r\n\t\tchangeQuantity,\r\n\t\t...props}: CartCardProps) => {\r\n return (\r\n\t <Flex\r\n\t\t p={'2rem'}\r\n\t\t h={'10rem'}\r\n\t\t borderRadius={'md'}\r\n\t\t boxShadow={'md'}\r\n\t\t flexDir={'row'}\r\n\t\t justifyContent={'left'}\r\n\t\t bg={'white'}\r\n\t\t {...props}\r\n\t >\r\n\t\t <Image\r\n\t\t\t src={img}\r\n\t\t\t alt={name}\r\n\t\t\t w={'auto'}\r\n\t\t\t h={'100%'}\r\n\t\t\t onClick={onClick}\r\n\t\t\t cursor={'pointer'}\r\n\t\t />\r\n\t\t <Flex\r\n\t\t   flexDir={'column'}\r\n\t\t   justifyContent={'left'}\r\n\t\t   mx={'1rem'}\r\n\t\t   onClick={onClick}\r\n\t\t >\r\n\t\t\t <Text\r\n\t\t\t\t fontSize={'2xl'}\r\n\t\t\t\t color={'blue'}\r\n\t\t\t >\r\n\t\t\t\t <b>{name}</b>\r\n\t\t\t </Text>\r\n\t\t\t <Divider\r\n\t\t\t \t color={'blue'}\r\n\t\t\t \t border={'3'}\r\n\t\t\t />\r\n\t\t\t <PriceTag\r\n\t\t\t\t isLocked={true}\r\n\t\t\t\t price={price}\r\n\t\t\t\t fontSize={'xl'}\r\n\t\t\t\t color={'yellow'}\r\n\t\t\t />\r\n\t\t </Flex>\r\n\t\t <Box flex={'1'}/>\r\n\t\t <Flex\r\n\t\t   flexDir={'column'}\r\n\t\t   alignItems={'center'}\r\n\t\t   justifyContent={'center'}\r\n\t   >\r\n\t\t \t <QuantitySelect\r\n\t\t\t\t quantity={quantity}\r\n\t\t\t\t changeQuantity={changeQuantity}\r\n\t\t\t />\r\n\t\t\t <Link\r\n\t\t\t\t onClick={() => changeQuantity(0)}\r\n\t\t\t\t fontSize={'sm'}\r\n\t\t\t\t mt={'0.5rem'}\r\n\t\t\t >\r\n\t\t\t\t Remove\r\n\t\t\t </Link>\r\n\t\t </Flex>\r\n  </Flex>\r\n );\r\n};\r\n\r\nexport default CartCard;","import React from 'react';\r\nimport {Box, Flex, Link, Text, BoxProps} from \"@chakra-ui/react\";\r\nimport {CartItem} from \"src/types\";\r\n\r\nexport type RecoverCardProps = {\r\n\titem: CartItem,\r\n\tchangeQuantity: (value : number) => void,\r\n\tonBanish: () => void,\r\n} & BoxProps;\r\n\r\n//This card renders a small box asking whether the user wants to restore an item after deleting it\r\nconst RecoverCard: React.FC<RecoverCardProps> = ({item, changeQuantity, onBanish, ...props}: RecoverCardProps) => {\r\n return (\r\n\t <Flex\r\n\t\t p={'1rem'}\r\n\t\t borderRadius={'md'}\r\n\t\t boxShadow={'md'}\r\n\t\t flexDir={'row'}\r\n\t\t justifyContent={'left'}\r\n\t\t alignItems={'center'}\r\n\t\t bg={'white'}\r\n\t\t {...props}\r\n\t >\r\n\t\t <Text\r\n\t\t\t fontSize={'lg'}\r\n\t\t\t color={'blue'}\r\n\t\t >\r\n\t\t\t <b>{item.name}</b> was removed.\r\n\t\t </Text>\r\n\t   <Box flex={'1'} />\r\n\t\t <Link //Restore the item by incrementing its quantity\r\n\t\t\t onClick={() => {\r\n\t\t\t\t changeQuantity(1)\r\n\t\t\t\t onBanish()\r\n\t\t\t }}\r\n\t\t\t fontSize={'sm'}\r\n\t\t\t mr={'1rem'}\r\n\t\t\t lineHeight={'75%'}\r\n\t\t >\r\n\t\t\t Restore\r\n\t\t </Link>\r\n\t\t <Link //Delete the item without incrementing\r\n\t\t\t onClick={onBanish}\r\n\t\t\t fontSize={'sm'}\r\n\t\t\t mr={'1rem'}\r\n\t\t\t lineHeight={'75%'}\r\n\t\t >\r\n\t\t\t Delete\r\n\t\t </Link>\r\n\t </Flex>\r\n );\r\n};\r\n\r\nexport default RecoverCard;","import React, {useState} from 'react';\r\nimport {CartItem} from \"../../types\";\r\nimport {Flex, Box, Text, Divider, Button, Link as ChakraLink} from \"@chakra-ui/react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport CartCard from \"./components/CartCard\"\r\nimport PriceTag from \"../../components/PriceTag\";\r\nimport RecoverCard from \"./components/RecoverCard\";\r\n\r\nexport type CartProps = {\r\n\tCartItems: CartItem[],\r\n\tsearchExp: string,\r\n\tsetShowItem: (target: any) => void,\r\n\tchangeQuantity: (name: string, value: number) => void\r\n};\r\n\r\nconst Cart: React.FC<CartProps> = (\r\n\t{CartItems,\r\n\t\tsearchExp,\r\n\t\tsetShowItem,\r\n\t\tchangeQuantity}: CartProps) => {\r\n\r\n\t// Keep track of the last item removed\r\n\tconst [removed, setRemoved] = useState<string>();\r\n\r\n\treturn (\r\n \t <Flex>\r\n\t\t <Flex //Flex containing cart items\r\n\t\t   flexDir={'column'}\r\n\t\t   flex={'3'}\r\n\t\t   mx={'1rem'}\r\n\t\t >\r\n\t\t\t <Text\r\n\t\t\t \t fontSize={'4xl'}\r\n\t\t\t \t color={'yellow'}\r\n\t\t\t >\r\n\t\t\t\t <b>Cart</b>\r\n\t\t\t </Text>\r\n\t\t\t <Divider\r\n\t\t\t\t color={'blue'}\r\n\t\t\t\t border={'3'}\r\n\t\t\t\t mb={'0.5rem'}\r\n\t\t\t />\r\n\t\t\t {CartItems\r\n\t\t\t\t .filter(item => { // reject all items with quantity = 0, but keep the last one removed\r\n\t\t\t\t\t return item.quantity > 0 || item.name === removed;\r\n\t\t\t\t })\r\n\t\t\t\t .filter(item => { // if search is active, reject non-matches\r\n\t\t\t\t \t if (searchExp === '') {\r\n\t\t\t\t \t\t return true;\r\n\t\t\t\t \t } else {\r\n\t\t\t\t \t\t return item.name.toLowerCase().includes(searchExp);\r\n\t\t\t\t \t }\r\n\t\t\t\t })\r\n\t\t\t\t .map((item, index) => { // choose whether to render a RecoverCard or a CartCard depending on whether item was removed\r\n\t\t\t\t return (item.name === removed ?\r\n\t\t\t\t\t\t <RecoverCard\r\n\t\t\t\t\t\t\t key={`${item.name}${index}`}\r\n\t\t\t\t\t\t\t item={item}\r\n\t\t\t\t\t\t\t mb={'1rem'}\r\n\t\t\t\t\t\t\t changeQuantity={(value: number) => {\r\n\t\t\t\t\t\t\t\t changeQuantity(item.name, value)\r\n\t\t\t\t\t\t\t }}\r\n\t\t\t\t\t\t\t onBanish={() => setRemoved('')}\r\n\t\t\t\t\t\t />\r\n\t\t\t\t\t\t :\r\n\t\t\t\t\t\t <CartCard\r\n\t\t\t\t\t\t\t key={`${item.name}${index}`}\r\n\t\t\t\t\t\t\t item={item}\r\n\t\t\t\t\t\t\t onClick={() => setShowItem(item.name)}\r\n\t\t\t\t\t\t\t mb={'1rem'}\r\n\t\t\t\t\t\t\t changeQuantity={\r\n\t\t\t\t\t\t\t\t (value: number) => {\r\n\t\t\t\t\t\t\t\t\t if (value === 0) {\r\n\t\t\t\t\t\t\t\t\t\t setRemoved(item.name)\r\n\t\t\t\t\t\t\t\t\t }\r\n\t\t\t\t\t\t\t\t\t changeQuantity(item.name, value)\r\n\t\t\t\t\t\t\t\t }\r\n\t\t\t\t\t\t\t }\r\n\t\t\t\t\t\t />\r\n\t\t\t\t\t )\r\n\t\t\t })}\r\n\t\t </Flex>\r\n\t   <Flex //flex box containing names and prices\r\n\t     flexDir={'column'}\r\n\t     flex={'1'}\r\n\t     mx={'1rem'}\r\n\t     alignItems={'flex-end'}\r\n\t   >\r\n\t\t   <Text\r\n\t\t\t   fontSize={'4xl'}\r\n\t\t\t   color={'yellow'}\r\n\t\t   >\r\n\t\t\t   <b>Total</b>\r\n\t\t   </Text>\r\n\t\t   <Divider\r\n\t\t\t   color={'blue'}\r\n\t\t\t   border={'3'}\r\n\t\t   />\r\n\t\t   {CartItems //display names and values of all items currently in the cart (quantity > 0)\r\n\t\t\t   .filter(item => {\r\n\t\t\t\t   return item.quantity > 0;\r\n\t\t\t   })\r\n\t\t\t   .map((item, index) =>\r\n\t\t\t\t   <Flex\r\n\t\t\t\t\t   key={`${item}${index}`}\r\n\t\t\t\t     w={'100%'}\r\n\t\t\t\t   >\r\n\t\t\t\t\t   <Text>\r\n\t\t\t\t\t\t   {item.name}\r\n\t\t\t\t\t   </Text>\r\n\t\t\t\t\t   <Box flex={'1'}/>\r\n\t\t\t\t\t   <PriceTag\r\n\t\t\t\t\t\t   isLocked={false}\r\n\t\t\t\t\t\t   price={item.price * item.quantity}\r\n\t\t\t\t\t   />\r\n\t\t\t\t   </Flex>\r\n\t\t\t   )\r\n\t\t   }\r\n\t\t   <Divider\r\n\t\t\t   color={'blue'}\r\n\t\t\t   border={'3'}\r\n\t\t   />\r\n\t\t   <PriceTag\r\n\t\t\t   isLocked={false}\r\n\t\t\t   fontSize={'lg'}\r\n\t\t\t   color={'yellow'}\r\n\t\t\t   price={\r\n\t\t\t   \t[...CartItems.map(item => item.price * item.quantity), 0] //making sure array is never empty\r\n\t\t\t\t    .reduce((sum, num) => sum + num) //sum all items currently added to cart\r\n\t\t\t   }\r\n\t\t   />\r\n\t\t   <Button //Dummy checkout button\r\n\t\t     bg={'yellow'}\r\n\t\t     mt={'1rem'}\r\n\t\t     alignSelf={'center'}\r\n\t\t   >\r\n\t\t\t   Checkout\r\n\t\t   </Button>\r\n\t\t   <ChakraLink //React-Router link to homepage wrapped by chakra link for styling\r\n\t\t\t   mt={'0.5rem'}\r\n\t\t\t   alignSelf={'center'}\r\n\t\t   >\r\n\t\t\t   <Link to={'/'}>\r\n\t\t\t\t\t   Continue Shopping...\r\n\t\t\t   </Link>\r\n\t\t   </ChakraLink>\r\n\t   </Flex>\r\n   </Flex>\r\n );\r\n};\r\n\r\nexport default Cart;","import React from 'react';\r\nimport {CartItem} from \"../../types\";\r\nimport QuantitySelect from \"../QuantitySelect\";\r\nimport {\r\n\tModal,\r\n\tModalOverlay,\r\n\tModalContent,\r\n\tModalHeader,\r\n\tModalFooter,\r\n\tModalBody,\r\n\tModalCloseButton,\r\n\tImage,\r\n\tTag,\r\n\tText, Flex\r\n} from \"@chakra-ui/react\"\r\nimport PriceTag from \"../PriceTag\";\r\n\r\nexport type ItemModalProps = {\r\n\titem: CartItem,\r\n\tquantity: number,\r\n\tisOpen: boolean,\r\n\tonClose: () => void,\r\n\tchangeQuantity: (value: number) => void\r\n};\r\n\r\nconst ItemModal: React.FC<ItemModalProps> = (\r\n\t{item,\r\n\t\tquantity,\r\n\t\tisOpen,\r\n\t\tonClose,\r\n\t\tchangeQuantity}: ItemModalProps) => {\r\n\treturn (\r\n\t <Modal isOpen={isOpen} onClose={onClose}>\r\n\t\t <ModalOverlay />\r\n\t\t <ModalContent>\r\n\t\t\t <ModalHeader userSelect={'none'}>{item.name}</ModalHeader>\r\n\t\t\t <ModalCloseButton />\r\n\t\t\t <ModalBody>\r\n\t\t\t\t <Image\r\n\t\t\t\t\t src={item.img}\r\n\t         alt={item.name}\r\n\t         userSelect={'none'}/>\r\n\t\t\t\t <PriceTag\r\n\t\t\t\t\t isLocked={false}\r\n\t\t\t\t\t price={item.price}\r\n\t\t\t\t\t fontSize={'xl'}\r\n\t\t\t\t\t color={'yellow'}\r\n\t\t\t\t />\r\n\t\t\t\t <Flex\r\n\t\t\t\t\t flexDir={'row'}\r\n\t\t\t\t\t flexWrap={'wrap'}\r\n\t\t\t\t >\r\n\t\t\t\t\t {item.tags.sort().map(tag => {\r\n\t\t\t\t\t\t return <Tag\r\n\t\t\t\t\t\t\t key={`${item.name}_modal_${tag}`}\r\n\t\t\t\t\t\t\t bg={'yellow'}\r\n\t\t\t\t\t\t\t color={'blue'}\r\n\t\t\t\t\t\t\t fontSize={'sm'}\r\n\t\t\t\t\t\t\t p={'0.5rem'}\r\n\t\t\t\t\t\t\t m={'0.2rem'}\r\n\t\t\t\t\t\t\t h={'1.5rem'}\r\n\t\t\t\t\t\t\t lineHeight={'75%'}\r\n\t\t\t\t\t\t\t overflow={'hidden'}\r\n\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t {tag}\r\n\t\t\t\t\t\t </Tag>})}\r\n\t\t\t\t </Flex>\r\n         <Text\r\n\t\t\t\t\t color={'blue'}\r\n\t\t\t\t\t size={'md'}\r\n\t\t\t\t\t userSelect={'none'}\r\n\t\t\t\t >\r\n\t\t\t\t\t {item.desc}\r\n\t\t\t\t </Text>\r\n\t\t\t </ModalBody>\r\n\t\t\t <ModalFooter flex={'flex'} flexDir={'row'} justifyContent={'center'}>\r\n\t\t\t\t <QuantitySelect quantity={quantity} changeQuantity={changeQuantity} />\r\n\t\t\t </ModalFooter>\r\n\t\t </ModalContent>\r\n\t </Modal>\r\n\t);\r\n};\r\n\r\nexport default ItemModal;","import React from 'react';\r\nimport {Box, Text} from '@chakra-ui/react';\r\n\r\nconst Footer: React.FC = () => {\r\n return (\r\n  <Box\r\n    w={'100%'}\r\n    p={'1rem'}\r\n    bg={'blue'}\r\n  >\r\n\t  <Text\r\n\t    fontSize={'lg'}\r\n\t    color={'yellow'}\r\n\t  >\r\n\t\t  This website was created by Stephen Krider\r\n\t  </Text>\r\n  </Box>\r\n );\r\n};\r\n\r\nexport default Footer;","import React, { useState } from 'react';\nimport {Box, Flex} from '@chakra-ui/react';\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute\n} from \"react-router-dom\";\n\nimport { StoreItemsInfo } from './constants'\nimport { CartItem } from \"./types\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport Cart from \"./pages/Cart\";\nimport ItemModal from \"./components/ItemModal\";\nimport Footer from './components/Footer';\n\nfunction App() {\n\t//Append a new field, quantity, to StoreItems\n  const [CartItems, setCartItems] = useState(StoreItemsInfo.map(item => {\n    return {...item, quantity: 1} as CartItem\n  }))\n\n\t//keep track of search bar at root level\n  const [searchExp, setSearchExp] = useState<string>('')\n\t//keep track of modals to be shown\n  const [showItem, setShowItem] = useState<string>('none')\n\n\t//update quantity of an item in cart\n  const changeQuantity = (name : string, newQuantity : number) => {\n  \t//index of item to update\n    const index = CartItems.findIndex(item => item.name === name);\n    setCartItems(CartItems.map((item, i) => {\n    \t//Map all old elements, except one, which is updated. Not the best way to do this but works.\n      if (index === i) {\n        item.quantity = Math.max(newQuantity, 0)\n      }\n      return item\n    }))\n  }\n\n  const onItemModalClose = () => setShowItem('none'); //close modal\n\n  return (\n    <Router>\n\t    <Flex\n\t      bg={'#f2f5fa'}\n\t      minH={'1600px'}\n\t      flexDir={'column'}\n\t    >\n\t      <Navbar setSearch={setSearchExp} />\n\t      {CartItems.map((item, index) =>\n\t        <ItemModal // keep all the modals at root level ready to be rendered\n\t\t        key={`${item.name}modal${index}`}\n\t\t        item={item}\n\t          quantity={item.quantity}\n\t          isOpen={item.name === showItem}\n\t          onClose={onItemModalClose}\n\t          changeQuantity={(value : number) => changeQuantity(item.name, value)}\n\t        />\n\t      )}\n\t\t    <Switch>\n\t\t\t    <Route path=\"/cart\">\n\t\t\t\t    <Cart //Component for Cart page\n\t\t\t\t\t    CartItems={CartItems}\n\t\t\t\t\t    searchExp={searchExp}\n\t\t\t\t\t    setShowItem={(target: string) => setShowItem(target)}\n\t\t\t\t\t    changeQuantity={changeQuantity}\n\t\t\t\t    />\n\t\t\t    </Route>\n\t\t\t    <Route path=\"/\">\n\t\t\t\t    <Home //Component for Home page\n\t\t\t\t\t    cartItems={CartItems}\n\t\t\t\t\t    searchExp={searchExp}\n\t\t\t\t\t    setShowItem={(target: string) => setShowItem(target)}\n\t\t\t\t    />\n\t\t\t    </Route>\n\t\t    </Switch>\n\t      <Box flex={'1'}/>\n\t      <Footer />\n\t    </Flex>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {ChakraProvider, extendTheme} from \"@chakra-ui/react\";\nimport App from './App';\n\nconst theme = extendTheme({\n  colors: {\n    blue: '#161f36',\n    yellow: '#e3ae14'\n  },\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}